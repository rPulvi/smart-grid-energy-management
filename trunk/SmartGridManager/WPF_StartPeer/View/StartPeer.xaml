<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
		mc:Ignorable="d" x:Class="WPF_StartPeer.View.MainWindow"
        Title="SmartGrid Manager - Start Peer" Height="443.539" Width="386" 
		Icon="/img/Home.ico" ResizeMode="NoResize">
	
	<Window.Resources>
	
		<Style x:Key="StileTextBlock" TargetType="{x:Type TextBlock}">
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="FontFamily" Value="Calibri"/>
			<Setter Property="Foreground" Value="DarkGray"/>
		</Style>
		
		<Style x:Key="myTextBoxStyle" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="#FF616E78"/>
			<Setter Property="BorderBrush" Value="Black"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="FontFamily" Value="calibri"/>
		</Style>
		
		<Style x:Key="ShadowStyle">
			<Setter Property="Control.Foreground" Value="LightGray" />
		</Style>
		
		<Style x:Key="myButtonStyle" TargetType="Button">
			<Style.Triggers>
				<DataTrigger Binding="{Binding Text, ElementName=txtNome}" Value="">
					<Setter Property="UIElement.IsEnabled" Value="false"/>
				</DataTrigger>
			</Style.Triggers>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Background" >
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
						<GradientStop Color="#FF525252"/>
						<GradientStop Color="#FF2B3133" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" 
							BorderThickness="1"
							Padding="4,2" 
							BorderBrush="DarkGray" 
							CornerRadius="3" 
							Background="{TemplateBinding Background}">
							<Grid >
							<ContentPresenter HorizontalAlignment="Center" 
				                           VerticalAlignment="Center" Name="contentShadow" 
								Style="{StaticResource ShadowStyle}">
								<ContentPresenter.RenderTransform>
									<TranslateTransform X="1.0" Y="1.0" />
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
							<ContentPresenter HorizontalAlignment="Center" 
			                    VerticalAlignment="Center" Name="content"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="Black" />
								<Setter Property="Foreground" Value="#FF4788c8" />
								<Setter Property="Background" Value="#FF616E78"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">					
								<Setter Property="Background" >
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
										<GradientStop Color="#FFFFD190" Offset="0.35"/>
										<GradientStop Color="Orange" Offset="0.95"/>
										<GradientStop Color="#FFFFD190" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
								</Setter>
								<Setter TargetName="content" Property="RenderTransform" >
								<Setter.Value>
									<TranslateTransform Y="1.0" />
								</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="border" Property="Opacity" Value="0.7" />
								<Setter Property="Foreground" Value="Gray" />
							</Trigger>

						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

        <!--LIST STYLE-->
        <LinearGradientBrush x:Key="PressedBorderBrush"/>

        <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Direction="0" ShadowDepth="0" BlurRadius="2"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border x:Name="HeaderBorder" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="HeaderContent" Margin="0,0,0,1" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								RecognizesAccessKey="True" 
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Orange"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource PressedBorderBrush}"/>
                                <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Border">
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#BBBBBB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewItemContainerStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="#ffffff" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="Transparent" SnapsToDevicePixels="true">
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"  Value="true">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FF143c65" />
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#FF75aac7" Offset="0"/>
                                                    <GradientStop Color="#FF143c65" Offset="1"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="Orange"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#FF75aac7" Offset="0"/>
                                                    <GradientStop Color="#FF143c65" Offset="1"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Direction="0" ShadowDepth="0" BlurRadius="2"/>
                </Setter.Value>
            </Setter>
        </Style>
        <!--END LIST STYLE-->

        <DataTemplate x:Key="SellerBuyerName">
			<TextBlock Text="{Binding peerName}" Width="Auto" Height="Auto"/>
		</DataTemplate>
        <DataTemplate x:Key="SellerBuyerEnergy">
            <TextBlock Text="{Binding energy}" Width="Auto" Height="Auto"/>
        </DataTemplate>
        <DataTemplate x:Key="SellerBuyerPrice">
			<TextBlock Text="{Binding price}" Width="Auto" Height="Auto"/>
		</DataTemplate>
		
	</Window.Resources>
	
	<Window.Background>
		<RadialGradientBrush>
			<GradientStop Color="#FF181818" Offset="1"/>
			<GradientStop Color="#FF3B3B3B"/>
		</RadialGradientBrush>
	</Window.Background>
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<Menu Height="20" VerticalAlignment="Top" Grid.ColumnSpan="2" Width="Auto" Margin="0" d:IsLocked="True">
			<Menu.Background>
				<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
					<GradientStop Color="Black" Offset="1"/>
					<GradientStop Color="#FF4A597E"/>
				</LinearGradientBrush>
			</Menu.Background>
			<MenuItem Header="File" Foreground="White">
				<MenuItem Header="Exit" Foreground="Blue" Command="{Binding Exit}">
                    <MenuItem.Icon>
                        <Image Source="/img/quit.png" Width="18" Height="18"/>
                    </MenuItem.Icon>
                </MenuItem>
			</MenuItem>
			<MenuItem Header="View" Foreground="White">
                <MenuItem Header="Fields" Foreground="Blue" Command="{Binding ShowFields}">
                    <MenuItem.Icon>
                        <Image Source="/img/check-icon.png" Width="18" Height="18" Visibility="{Binding CheckIconFieldsVisibility}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Info" Foreground="{Binding GetInfoColour}" Command="{Binding ShowInfo}" IsEnabled="{Binding InfoViewEnabled}">
                    <MenuItem.Icon>
                        <Image Source="/img/check-icon.png" Width="18" Height="18" Visibility="{Binding CheckIconInfoVisibility}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Log" Foreground="blue" Command="{Binding ViewLog}"/>
			</MenuItem>
            <MenuItem Header="?" Foreground="White">
                <MenuItem Header="About" Foreground="Blue" Command="{Binding ViewSplash}"/>
            </MenuItem>
		</Menu>
		<Grid Height="47.425" Margin="0,2,0,5" Grid.Row="1" d:IsLocked="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.6*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Image Grid.Column="0" Height="50" Margin="0,0,5,0" Source="/img/SmartGridManager_Logo.png" HorizontalAlignment="Left"/>
			<StackPanel Grid.ColumnSpan="2" Grid.Column="1" Margin="0,0,10,0" Orientation="Horizontal" d:LayoutOverrides="Width">
				<TextBlock Width="150" Margin="0" TextWrapping="Wrap" Text="BUILDING SETUP" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="21.333" FontFamily="Calibri" FontWeight="Bold" Foreground="White" TextAlignment="Center">
					<TextBlock.Effect>
						<DropShadowEffect BlurRadius="2" Direction="0" ShadowDepth="0" RenderingBias="Quality"/>
					</TextBlock.Effect>
				</TextBlock>
				<Image Margin="0" Source="/WPF_StartPeer;component/img/Home.png" Stretch="Fill" Width="47.425"/>
			</StackPanel>
		</Grid>
		<Grid Margin="0" Grid.Row="2">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Rectangle Margin="5,0,5,-8" Stroke="Black" RadiusX="15" RadiusY="15" Opacity="0.095" d:IsLocked="True">
				<Rectangle.Fill>
					<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}"/>
				</Rectangle.Fill>
			</Rectangle>
			<StackPanel Margin="17,8,20,2" Visibility="{Binding SetFieldsVisibility}" d:IsHidden="True" d:IsLocked="True">
				<StackPanel Orientation="Vertical" IsEnabled="{Binding FormEnabled}">
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Name:"/></TextBlock>
						<TextBox Style="{StaticResource myTextBoxStyle}" Text="{Binding Nome, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="txtNome" Margin="0" TextWrapping="Wrap" BorderThickness="1,1,1,0" Grid.Column="1" d:LayoutOverrides="HorizontalAlignment" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock Margin="0,0,2,0" TextWrapping="Wrap" HorizontalAlignment="Right" Style="{DynamicResource StileTextBlock}" FontSize="13.333" d:LayoutOverrides="Height" VerticalAlignment="Center"><Run Language="it-it" Text="State:"/></TextBlock>
						<CheckBox Command="{Binding SetProducer}" x:Name="chkProducer" Content="Producer" Margin="2,0,0,0" Foreground="darkgray" FontFamily="Calibri" VerticalAlignment="Center" Grid.Column="1"/>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Energy Tipe:"/></TextBlock>
						<ComboBox IsEnabled="{Binding IsChecked, ElementName=chkProducer}" SelectedValue="{Binding EnType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Tag" IsSynchronizedWithCurrentItem="True" Width="150" x:Name="cmbEnergyType" Margin="2,0,0,0" Grid.Column="1" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Center">
							<ComboBoxItem Content="Solare" Tag="1"/>
							<ComboBoxItem Content="Eolica" Tag="2"/>
							<ComboBoxItem Content="Idrica" Tag="3"/>
							<ComboBoxItem Content="Termica" Tag="4"/>
						</ComboBox>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Energy Peak(KW/h):"/></TextBlock>
						<TextBox Style="{StaticResource myTextBoxStyle}" Text="{Binding EnPeak, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="txtPicco" Margin="0" TextWrapping="Wrap" d:LayoutOverrides="Width" Grid.ColumnSpan="2" Grid.Column="1"/>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Price € (KW/h):"/></TextBlock>
						<TextBox Style="{StaticResource myTextBoxStyle}" IsEnabled="{Binding IsChecked, ElementName=chkProducer}" Text="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="txtPrezzo" Margin="0" TextWrapping="Wrap" d:LayoutOverrides="Width" Grid.ColumnSpan="2" Grid.Column="1"/>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Energy Produced(KW/h):"/></TextBlock>
						<TextBox Style="{StaticResource myTextBoxStyle}" Text="{Binding EnProduced, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="txtEnergiaGeneratore" Margin="0" TextWrapping="Wrap" d:LayoutOverrides="Width" Grid.ColumnSpan="2" Grid.Column="1"/>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Address:"/></TextBlock>
						<TextBox Style="{StaticResource myTextBoxStyle}" Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="txtIndirizzo" Margin="0" TextWrapping="Wrap" Height="22.744" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" Grid.Column="1"/>
					</Grid>
					<Grid Margin="0,0,0,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.4*"/>
							<ColumnDefinition Width="0.6*"/>
						</Grid.ColumnDefinitions>
						<TextBlock TextWrapping="Wrap" Style="{DynamicResource StileTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"><Run Language="it-it" Text="Administrator:"/></TextBlock>
						<TextBox Style="{StaticResource myTextBoxStyle}" Text="{Binding Admin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="txtAdministrator" Height="23" Margin="0" TextWrapping="Wrap" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" Grid.Column="1"/>
					</Grid>
				
				
				
				</StackPanel>
				
				
				
				<Button Command="{Binding StartPeer}" Style="{StaticResource myButtonStyle}"
					Height="33.296" Width="112.381" HorizontalAlignment="Right" Margin="0,40,0,0" BorderBrush="{x:Null}" Foreground="DarkGray">
					<Grid d:IsLocked="True" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Image Source="{Binding StartButtonIconPath}"
							Margin="1.785,1.69,1.596,1.691"
							Grid.Column="0" />

						<StackPanel Grid.Column="1" Margin="5">
							<TextBlock Text="{Binding StartButton}"
								TextWrapping="Wrap" 
								FontWeight="Bold"/>
						</StackPanel>
					</Grid>
				</Button>
			</StackPanel>
			<Grid Margin="17,8,20,2" Visibility="{Binding SetInfoVisibility}">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
                <ListView ItemsSource="{Binding GetSellersBuyersList}"
					ItemContainerStyle="{StaticResource ListViewItemContainerStyle}" Margin="0,0,0,10">
					<ListView.View>
						<GridView>
                            <GridViewColumn Header="{Binding GetSellerBuyer}" CellTemplate="{StaticResource SellerBuyerName}" Width="100"/>
                            <GridViewColumn Header="Energy (KW/h)" CellTemplate="{StaticResource SellerBuyerEnergy}" Width="Auto"/>
                            <GridViewColumn Header="Price € (KW/h)" CellTemplate="{StaticResource SellerBuyerPrice}" Width="{Binding GetPriceWidth}"/>
                        </GridView>
					</ListView.View>
				</ListView>
				<Grid Margin="27,0" Grid.Row="1" VerticalAlignment="Bottom">
					<Grid Margin="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" d:IsLocked="True">
						<Rectangle Fill="#FF057EB5" Margin="0" Width="143.241" Height="65" RadiusX="10" RadiusY="10"/>
						<Rectangle Margin="0,0,0,30" Width="143.241" Height="35" RadiusX="10" RadiusY="10">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="Transparent" Offset="1"/>
									<GradientStop Color="White"/>
									<GradientStop Color="#7FFFFFFF" Offset="0.438"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<TextBlock Margin="0,0,10,0" Text="31.5" FontSize="46.667" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold" HorizontalAlignment="Right" Foreground="White" Opacity="0.455" TextWrapping="Wrap"/>
						<TextBlock Height="18" Margin="10,0,0,-4" Text="KW/h" FontSize="10.667" VerticalAlignment="Bottom" FontFamily="Calibri" FontWeight="Bold"/>
					</Grid>
					<Grid Margin="0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
						<Rectangle Fill="#FF057EB5" Margin="0" Width="143.241" Height="65" RadiusX="10" RadiusY="10"/>
						<Rectangle Margin="0,0,0,30" Width="143.241" Height="35" RadiusX="10" RadiusY="10">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="Transparent" Offset="1"/>
									<GradientStop Color="White"/>
									<GradientStop Color="#7FFFFFFF" Offset="0.438"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<TextBlock Margin="0,0,10,0" Text="465" FontSize="46.667" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold" HorizontalAlignment="Right" Foreground="White" Opacity="0.455" TextWrapping="Wrap"/>
						<TextBlock Height="18" Margin="10,0,0,-4" Text="EUR" FontSize="10.667" VerticalAlignment="Bottom" FontFamily="Calibri" FontWeight="Bold"/>
					</Grid>
					<Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Top" d:IsLocked="True">
						<Rectangle Margin="0,0,0,56" Height="18" RadiusX="4" RadiusY="4" VerticalAlignment="Top" Width="90">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFF7800" Offset="0"/>
									<GradientStop Color="#FFD6AA00" Offset="1"/>
									<GradientStop Color="#FFFFA700" Offset="0.88"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle Height="11.333" RadiusX="4" RadiusY="4" VerticalAlignment="Top" Width="90">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="Transparent" Offset="1"/>
									<GradientStop Color="White"/>
									<GradientStop Color="#7FFFFFFF" Offset="0.438"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<TextBlock Height="18" Margin="0,2,0,0" Text="TOTAL" VerticalAlignment="Top" FontFamily="Calibri" FontWeight="Bold" HorizontalAlignment="Center" Foreground="#FF353535" TextAlignment="Center"/>
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<Grid Margin="0,0,0,1" Grid.Row="3" VerticalAlignment="Bottom" d:IsLocked="True">
			<StackPanel>
				<Rectangle Height="1" Margin="0,0,0,3" Stroke="#FF606060" HorizontalAlignment="Center" VerticalAlignment="Center" Width="340"/>
				<StackPanel Orientation="Horizontal">
					<Image x:Name="imgPeerStatus" Source="{Binding Path}" Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,3,0"/>
					<TextBlock Text="{Binding GetPeerStatus}" Style="{StaticResource StileTextBlock}" TextWrapping="Wrap" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
				</StackPanel>
			</StackPanel>
		</Grid>
        
	</Grid>
</Window>
